:root{   /*Pseudoselector*/
 --blanco: #FFFFFF;
 --obscuro: #212121;
 --primario: #ffc107;
 --secundario: #0097a7;
 --gris: #757575;
}


/*** GLOBALES ***/
html{
    font-size: 62.5%;
    box-sizing: border-box;
    scroll-snap-type: y mandatory;
}
/* Scroll Snap
Dentro de esta clase especificamos que al hacer scroll este se detenga en esta seccion 
*/
.servicio,
.navegacion-principal,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}
*, *:before, *:after{  /*Lo que hace esta linea es aplicar el box-sizing a todos los elementos de HTML */
    box-sizing: inherit;
}
body{
    font-size: 16px; /* 1rem = 10px*/
    font-family: "Krub", sans-serif;
    background-image: linear-gradient(to top, #d0d4da 0%, #ffffff 100%); /*Hacer un degradado de fondo en toda la pagina web*/
}
.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: 0.5rem;
    width: 90%;
    text-align: center;
    border: none;
}
@media (min-width: 760px){
    .boton{
        width: auto;
    }
}
.boton:hover{
    cursor: pointer;
}
.sombra{
    box-shadow: 0px 5px 15px 0px rgba(0,0,0,0.5);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}


/*** UTILIDADES ENFOQUE(UTILITY FIRST)***/
.w-small-100{
    width: 100%;
} 
@media (min-width: 768px){
    .w-small-100{
        width: auto;
    }   
}
.flex{
    /* Alinear horizontalmente */
    display: flex;
}
.alinear-derecha{
    /* Alinear del lado derecho de manera horizontal*/
    justify-content:flex-end;
}

/*** TIPOGRAFIAS ***/
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}   
h3{
    font-size: 1.8rem;
}
h1,h2,h3{
    text-align: center;
}


/*** TITULOS ***/
.titulo span{
    font-size: 2rem;
}


/*** NAVEGACION PRINCIPAL ***/
.contenedor{
    max-width: 120rem;
    margin: 0 auto;
}
.nav-bg{
    background-color: var(--secundario);
}
.navegacion-principal{
    display: flex;
    flex-direction: column;
}
/*Uso de Media Queries para cambiar la posicion de la navbar*/
@media (min-width: 480px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between; /*(SB)Sirve para alinear elementos horizontalmente*/
    }
} 
.navegacion-principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem;
}
/*Eventos o pseudoclases: Hover nos permite cambiar 
el color del enlace al posicionar el mouse sobre el*/
.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--obscuro);
}


/*** SECCION 1 (IMAGEN) ***/
/* Propiedad para agregar una imagen a la clase */
.hero{
    background-image: url(../img/hero.jpg); /*Propiedad para agregar una imagen como fondo */
    background-repeat: no-repeat;
    background-size: cover;
    height: 45rem;
    position: relative;
    margin-bottom: 2rem;
}
.contenido-hero{
    position: absolute;
    background-color: rgba(0,0,0, 0.65);
    width: 100%;
    height: 100%;
    /*Fragmento de codigo para alinear de manera vertical y horizontal*/
    display: flex;
    flex-direction: column;
    align-items: center; /*Alinear horizontalmente*/
    justify-content: center; /*Alinear verticalmente*/
}
.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco);
}


/*** SERVICIOS ***/
/* Si el dispositivo es igual o mayor a 760px, se crearan las 3 columnas */
@media (min-width: 760px){
    .servicios{
        display: grid;
        /* Con esta linea de codigo hacemos referencia a dividir el espacio en 3 y que cada columna tome una fraccion del espacio total */
        grid-template-columns: repeat(3, 1fr);
        /* Agregar separacion entre columnas */
        column-gap: 1rem;
    }    
}
.servicio{
    /*Cuando el 'flex-direction' no se especifica, la propiedad 'align-items' alineara de manera VERTICAL
    pero en este caso alinea de manera HORIZONTAL ya que se cambio el 'flex-direction: column'*/
    display: flex;
    flex-direction: column; 
    align-items: center; /*AI se usa cuando el 'flex-direction: column'*/
}
.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}
.servicio p{
    line-height: 2; /*Propiedad para hacer interlineado*/
}
.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    /*Cuando el 'flex-direction' no se especifica, la propiedad 'align-items' alineara de manera VERTICAL
    y 'justify-content: center;' alineara de manera HORIZONTAL*/
    display: flex;
    justify-content: space-evenly; /*JC se usa cuando el 'flex-direction: row'*/
    align-items: center;
}

/* CONTACTO (FORMULARIO) */
.formulario{
    background-color: #b1b1b1;
    /* Con esta linea de codigo estamos evaluando dos condiciones, dependiendo del ancho del contenedor(formulario) tomara uno de los dos valores
    por ejemplo, si el tama침o del contenedor(fomulario) es menor a 600px tomar치 el valor de la izquierda, y si el tama침o del contenedor es mayor
    a 600px, tomar치 el valor de la derecha. Con esto tambien se pueden ahorrar el uso de MediaQueries */
    width: min(60rem, 100%);
    /* Se recomienda usar 'margin' para centrar horizontalmente, cuando el padre que lo contiene NO tenga como propiedad un 'display:flex' y
    cuando sea un elemento del tipo BLOCK, como en este caso es un formulario */
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: bold;
    margin-bottom: 2rem;
    color: var(--primario);
}
@media (min-width: 768px){
    .contenedor-campos{
        display: grid;
        grid-template-columns: 50% 50%;
        /* Espacio entre columnas */
        column-gap: 1rem;
        grid-template-rows: auto auto 20rem;
    }   

    /* Si existen mas de 1 elemento con la clase 'campo' dentro del mismo contenedor padre, esta linea de codigo busca el 3er elemento 
    con el nombre de esa clase(inicia en 1) */
    .campo:nth-child(3),
    .campo:nth-child(4){
        grid-column: 1 / 3; /*Expande el elemento en el grid desde la columna 1 a la 4*/
    }
}
.campo{
    margin-bottom: 1rem;
}
.campo label{
    color: var(--blanco);
    margin-bottom: 0.5rem;
    font-weight: bold;
    display: block;
}
.campo textarea{
    height: 20rem;
}
.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: 0.5rem;
}

/* FOOTER */
.footer{
    text-align: center;
}